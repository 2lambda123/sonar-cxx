alias-declaration:
   using identifier attribute-specifier-seqopt = defining-type-id ;

decl-specifier:
   storage-class-specifier
   defining-type-specifier
   function-specifier
   friend
   typedef
   constexpr

type-specifier:
   simple-type-specifier
   elaborated-type-specifier
   typename-specifier
   cv-qualifier

defining-type-specifier:
   type-specifier
   class-specifier
   enum-specifier

defining-type-specifier-seq:
   defining-type-specifier attribute-specifier-seqopt
   defining-type-specifier defining-type-specifier-seq

enum-head:
   enum-key attribute-specifier-seqopt enum-head-nameopt enum-baseopt

enum-head-name:
   nested-name-specifieropt identifier

opaque-enum-declaration:
   enum-key attribute-specifier-seqopt nested-name-specifieropt identifier enum-baseopt ;

using-declaration:
   using using-declarator-list ;

using-declarator-list:
   using-declarator ...opt
   using-declarator-list , using-declarator ...opt

using-declarator:
   typenameopt nested-name-specifier unqualified-id

parameters-and-qualifiers:
   ( parameter-declaration-clause ) cv-qualifier-seqopt ref-qualifieropt noexcept-specifieropt attribute-specifier-seqopt

trailing-return-type:
   -> type-id

defining-type-id:
   defining-type-specifier-seq abstract-declaratoropt

member-declaration:
   attribute-specifier-seqopt decl-specifier-seqopt member-declarator-listopt ; // todo
   function-definition // todo
   using-declaration
   static_assert-declaration
   template-declaration
   deduction-guide // done
   alias-declaration
   empty-declaration // todo
