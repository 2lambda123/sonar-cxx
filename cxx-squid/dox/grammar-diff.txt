namespace-name:
   identifier
   namespace-alias

postfix-expression:
   primary-expression
   postfix-expression [ expr-or-braced-init-list ]
   postfix-expression ( expression-listopt )
   simple-type-specifier ( expression-listopt )
   typename-specifier ( expression-listopt )
   simple-type-specifier braced-init-list
   typename-specifier braced-init-list
   postfix-expression . templateopt id-expression
   postfix-expression -> templateopt id-expression
   postfix-expression . pseudo-destructor-name
   postfix-expression -> pseudo-destructor-name
   postfix-expression ++
   postfix-expression --
   dynamic_cast < type-id > ( expression )
   static_cast < type-id > ( expression )
   reinterpret_cast < type-id > ( expression )
   const_cast < type-id > ( expression )
   typeid ( expression )
   typeid ( type-id )

declaration:
   block-declaration
   nodeclspec-function-declaration // todo
   function-definition
   template-declaration
   deduction-guide
   explicit-instantiation
   explicit-specialization
   linkage-specification
   namespace-definition
   empty-declaration
   attribute-declaration

nodeclspec-function-declaration:
   attribute-specifier-seqopt declarator ;

alias-declaration:
   using identifier attribute-specifier-seqopt = defining-type-id ;

decl-specifier:
   storage-class-specifier
   defining-type-specifier
   function-specifier
   friend
   typedef
   constexpr

type-specifier:
   simple-type-specifier
   elaborated-type-specifier
   typename-specifier
   cv-qualifier

defining-type-specifier:
   type-specifier
   class-specifier
   enum-specifier

defining-type-specifier-seq:
   defining-type-specifier attribute-specifier-seqopt
   defining-type-specifier defining-type-specifier-seq

enum-head:
   enum-key attribute-specifier-seqopt enum-head-nameopt enum-baseopt

enum-head-name:
   nested-name-specifieropt identifier

opaque-enum-declaration:
   enum-key attribute-specifier-seqopt nested-name-specifieropt identifier enum-baseopt ;

using-declaration:
   using using-declarator-list ;

using-declarator-list:
   using-declarator ...opt
   using-declarator-list , using-declarator ...opt

using-declarator:
   typenameopt nested-name-specifier unqualified-id

parameters-and-qualifiers:
   ( parameter-declaration-clause ) cv-qualifier-seqopt ref-qualifieropt noexcept-specifieropt attribute-specifier-seqopt

trailing-return-type:
   -> type-id

defining-type-id:
   defining-type-specifier-seq abstract-declaratoropt

member-declaration:
   attribute-specifier-seqopt decl-specifier-seqopt member-declarator-listopt ; // todo
   function-definition // todo
   using-declaration
   static_assert-declaration
   template-declaration
   deduction-guide // done
   alias-declaration
   empty-declaration // todo
